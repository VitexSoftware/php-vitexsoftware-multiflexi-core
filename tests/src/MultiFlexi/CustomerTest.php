<?php

declare(strict_types=1);

/**
 * This file is part of the MultiFlexi package
 *
 * https://multiflexi.eu/
 *
 * (c) Vítězslav Dvořák <http://vitexsoftware.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Test\MultiFlexi;

use MultiFlexi\Customer;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2023-11-07 at 13:03:02.
 */
class CustomerTest extends \PHPUnit\Framework\TestCase
{
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void
    {
        $this->object = new Customer();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(): void
    {
    }

    /**
     * @covers \MultiFlexi\Customer::getUserName
     *
     * @todo   Implement testgetUserName().
     */
    public function testgetUserName(): void
    {
        $this->assertEquals('', $this->object->getUserName());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\Customer::columns
     *
     * @todo   Implement testcolumns().
     */
    public function testcolumns(): void
    {
        $columns = $this->object->columns();
        $this->assertIsArray($columns, 'columns() should return an array');

        if (\is_array($columns)) {
            $this->assertArrayHasKey('id', $columns, 'columns() should contain id key');
            $this->assertArrayHasKey('login', $columns, 'columns() should contain login key');
        }
    }

    /**
     * @covers \MultiFlexi\Customer::__sleep
     *
     * @todo   Implement test__sleep().
     */
    public function testSleep(): void
    {
        $result = $this->object->__sleep();
        $this->assertIsArray($result, '__sleep() should return an array');
        $this->assertContains('data', $result, '__sleep() should contain "data"');
    }
}
