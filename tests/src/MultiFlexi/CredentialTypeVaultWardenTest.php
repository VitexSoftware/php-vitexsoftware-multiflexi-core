<?php

declare(strict_types=1);

/**
 * This file is part of the MultiFlexi package
 *
 * https://multiflexi.eu/
 *
 * (c) Vítězslav Dvořák <http://vitexsoftware.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Test\MultiFlexi;

use MultiFlexi\CredentialType\VaultWarden;
use PHPUnit\Framework\TestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2024-05-20 at 12:54:19.
 */
final class CredentialTypeVaultWardenTest extends TestCase
{
    protected VaultWarden $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void
    {
        $this->object = new VaultWarden();
    }

    /**
     * @covers \MultiFlexi\CredentialType\VaultWarden::__construct
     */
    public function testConstructor(): void
    {
        $this->assertInstanceOf(VaultWarden::class, $this->object);
        $this->assertCount(4, $this->object->fieldsInternal());
        $this->assertNotNull($this->object->fieldsInternal()->getFieldByCode('VAULTWARDEN_URL'));
        $this->assertNotNull($this->object->fieldsInternal()->getFieldByCode('VAULTWARDEN_EMAIL'));
        $this->assertNotNull($this->object->fieldsInternal()->getFieldByCode('VAULTWARDEN_PASSWORD'));
        $this->assertNotNull($this->object->fieldsInternal()->getFieldByCode('VAULTWARDEN_FOLDER'));
    }

    /**
     * @covers \MultiFlexi\CredentialType\VaultWarden::name
     */
    public function testName(): void
    {
        $this->assertIsString(VaultWarden::name());
    }

    /**
     * @covers \MultiFlexi\CredentialType\VaultWarden::description
     */
    public function testDescription(): void
    {
        $this->assertIsString(VaultWarden::description());
    }

    /**
     * @covers \MultiFlexi\CredentialType\VaultWarden::logo
     */
    public function testLogo(): void
    {
        $this->assertIsString(VaultWarden::logo());
    }
}
